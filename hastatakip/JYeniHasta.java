/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package hastatakip;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.Window;
import java.awt.event.WindowEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.time.Year;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author esmasert
 */
public class JYeniHasta extends javax.swing.JFrame {

    /** Creates new form JYeniHasta */
    public JYeniHasta() {
        
        initComponents();
        
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        
        setDefaultCloseOperation(JYeniHasta.DISPOSE_ON_CLOSE);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    //@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtIsimSoyisim = new javax.swing.JTextField();
        txtTcNo = new javax.swing.JTextField();
        txtTelNo = new javax.swing.JTextField();
        txtAdres = new javax.swing.JTextField();
        btnYeniHastaKaydetveRndBilgEkle = new javax.swing.JButton();
        btnHastaListesiniGörüntüle = new javax.swing.JButton();
        btnSadeceKaydet = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtDogumTarihi = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Isim Soyisim:");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 204));
        jLabel2.setText("Yeni Hasta");

        jLabel3.setText("Tc No:");

        jLabel4.setText("Tel No:");

        jLabel5.setText("Adres:");

        txtTelNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelNoActionPerformed(evt);
            }
        });

        btnYeniHastaKaydetveRndBilgEkle.setBackground(new java.awt.Color(102, 153, 0));
        btnYeniHastaKaydetveRndBilgEkle.setText("Kaydet ve Randevu Bilgileri Ekle");
        btnYeniHastaKaydetveRndBilgEkle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYeniHastaKaydetveRndBilgEkleActionPerformed(evt);
            }
        });

        btnHastaListesiniGörüntüle.setText("Hasta Listesini Görüntüle");
        btnHastaListesiniGörüntüle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHastaListesiniGörüntüleActionPerformed(evt);
            }
        });

        btnSadeceKaydet.setBackground(new java.awt.Color(51, 153, 255));
        btnSadeceKaydet.setText("Kaydet");
        btnSadeceKaydet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSadeceKaydetActionPerformed(evt);
            }
        });

        jLabel6.setText("Doğum Tarihi:");

        txtDogumTarihi.setForeground(new java.awt.Color(102, 102, 102));
        txtDogumTarihi.setText("gg-aa-yyyy");
        txtDogumTarihi.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDogumTarihiFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDogumTarihiFocusLost(evt);
            }
        });
        txtDogumTarihi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtDogumTarihiMouseClicked(evt);
            }
        });
        txtDogumTarihi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDogumTarihiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(368, 368, 368)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtIsimSoyisim, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)
                            .addComponent(txtTcNo)
                            .addComponent(txtTelNo)
                            .addComponent(txtAdres)
                            .addComponent(txtDogumTarihi))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(btnHastaListesiniGörüntüle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(btnSadeceKaydet, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btnYeniHastaKaydetveRndBilgEkle, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel2)
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIsimSoyisim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTcNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtDogumTarihi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTelNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtAdres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnYeniHastaKaydetveRndBilgEkle, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHastaListesiniGörüntüle, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSadeceKaydet, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(130, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnYeniHastaKaydetveRndBilgEkleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYeniHastaKaydetveRndBilgEkleActionPerformed
        // TODO add your handling code here:
        
        String hastaBilgileriData[] = {txtIsimSoyisim.getText(),txtTcNo.getText(),txtTelNo.getText(),txtAdres.getText()};
        
        if(txtIsimSoyisim.getText().equals("")|| txtTcNo.getText().equals("")|| txtDogumTarihi.getText().equals("")|| txtTelNo.getText().equals("")|| txtAdres.getText().equals("")){
        
            // if any field left blank than show message
            
            JOptionPane.showMessageDialog(this, "Lütfen boş alan bırakmayınız.");   
        }else{
            
            String tcc = txtTcNo.getText();
        
            try {
                if(TcKarsilastirma(tcc) == 1 ){
                    
                    JOptionPane.showMessageDialog(this, "Bu TC numarasi baska hastada kayitli gorunuyor.");   
                }else{
                    
                    if(txtTelNo.getText().matches("[0-9]+")){

                        if(txtDogumTarihi.getText().matches("\\d{2}-\\d{2}-\\d{4}")){

                            String xx = txtDogumTarihi.getText();
                            String DTgun = Character.toString(xx.charAt(0)) + Character.toString(xx.charAt(1));
                            String DTay = Character.toString(xx.charAt(3)) + Character.toString(xx.charAt(4));
                            String DTyil = Character.toString(xx.charAt(6)) + Character.toString(xx.charAt(7)) + Character.toString(xx.charAt(8)) + Character.toString(xx.charAt(9));
                            int currYear = Year.now().getValue();


                            if(Integer.parseInt(DTgun) > 31){
                                JOptionPane.showMessageDialog(this, "Dogum gunu 31'den buyuk olamaz.");   
                            }else{
                                if(Integer.parseInt(DTay) > 12){
                                    JOptionPane.showMessageDialog(this, "Dogum ayi 12'den buyuk olamaz.");    
                                }else{
                                    if(Integer.parseInt(DTyil) > currYear){
                                        JOptionPane.showMessageDialog(this, "Dogum yili gunumuzden buyuk olamaz.");    
                                    }else{

                                        try(FileWriter fw = new FileWriter("hastaBilgileri.txt", true);
                                        BufferedWriter bw = new BufferedWriter(fw);
                                        PrintWriter out = new PrintWriter(bw))
                                        {
                                            out.println();

                                            int len = hastaBilgileriData.length;
                                            for (int i=0;i<len-1;i++) {
                                                out.print(hastaBilgileriData[i]);
                                                out.print(" / ");
                                            }
                                            out.print(hastaBilgileriData[len-1]);

                                            //JOptionPane.showMessageDialog(this, "Başarıyla kaydedildi."); 

                                        } catch (IOException e) {
                                            //exception handling left as an exercise for the reader
                                        }

                                        //TEKRARDAN  *********************************************************************************************************

                                        try(FileWriter fw2 = new FileWriter("randevuBilgileri.txt", true);
                                            BufferedWriter bw2 = new BufferedWriter(fw2);
                                            PrintWriter out2 = new PrintWriter(bw2))
                                        {
                                            out2.println();
                                            out2.print(hastaBilgileriData[0]);
                                            out2.print(" / ");
                                            out2.print(hastaBilgileriData[1]);
                                            out2.print(" / ");

                                            //JOptionPane.showMessageDialog(this, "Başarıyla kaydedildi."); 
                                        } catch (IOException e) {
                                            //exception handling left as an exercise for the reader
                                        }

                                        // *******************************************************************************************************************


                                        // BU SEFER YAS BILGILERINI FARKLI BIR DOSYAYA KAYDETME //

                                        String HastaYasBilgisiData[] = {txtIsimSoyisim.getText(),txtTcNo.getText(),txtDogumTarihi.getText()};

                                        try(FileWriter fw3 = new FileWriter("hastaBilgileriDogumTarihiIle.txt", true);
                                            BufferedWriter bw3 = new BufferedWriter(fw3);
                                            PrintWriter out3 = new PrintWriter(bw3))
                                        {
                                            out3.println();

                                            int len = HastaYasBilgisiData.length;
                                            for (int i=0;i<len-1;i++) {
                                                out3.print(HastaYasBilgisiData[i]);
                                                out3.print(" / ");
                                            }
                                            out3.print(HastaYasBilgisiData[len-1]);

                                            //JOptionPane.showMessageDialog(this, "Başarıyla kaydedildi."); 

                                        } catch (IOException e) {
                                            //exception handling left as an exercise for the reader
                                        }

                                        // KAYDET VE YENI PENCEREYI AC //

                                        JYeniHastaRandevuBilgileri YeniHastaRandevuBilgileriFrame = new JYeniHastaRandevuBilgileri();
                                        YeniHastaRandevuBilgileriFrame.setVisible(true);

                                        setVisible(false); //you can't see me!
                                        dispose(); //Destroy the JFrame object

                                        //JOptionPane.showMessageDialog(this, "Başarıyla kaydedildi ve liste güncellendi."); 

                                    }
                                }
                            }

                        }else{
                            JOptionPane.showMessageDialog(this, "Lütfen doğum tarihini verilen belirli formatta giriniz."); 
                            txtDogumTarihi.setText("gg-aa-yyyy");
                            txtDogumTarihi.setForeground(new java.awt.Color(102, 102, 102));
                        }
                        
                    }else{
                            JOptionPane.showMessageDialog(this, "Lütfen telefon numarasina sadece sayilari bosluk birakmadan giriniz"); 
                    }
                } 
                
            } catch (IOException ex) {
                Logger.getLogger(JYeniHasta.class.getName()).log(Level.SEVERE, null, ex);
            }
                    
        }
    }//GEN-LAST:event_btnYeniHastaKaydetveRndBilgEkleActionPerformed
    
    private int TcKarsilastirma (String TcNosu) throws FileNotFoundException, IOException{
        
        int flag = -1;
    
        File hbFile = new File("hastaBilgileri.txt");
        FileReader fr = new FileReader(hbFile);
        BufferedReader br = new BufferedReader(fr);

        String line;     
        //String input="34690101228";   // Input word to be searched
        
        while((line=br.readLine())!=null) 
        {
            System.out.println("\n^^^^^ LOOP ^^^^^");
            if(line.contains(" / "+ TcNosu + " / ")){
                flag = 1;
                System.out.println("\n^^^^^ BULDU TCYI ^^^^^");
                break;
            }else{
                flag = 0;
            }
        }
    
        System.out.println("\n****** FLAG ******");
        System.out.println(flag);
        return flag;
    
    }
    
    private void btnHastaListesiniGörüntüleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHastaListesiniGörüntüleActionPerformed
        // TODO add your handling code here:
        
        JTable JTableFrame = new JTable();
        JTableFrame.setVisible(true);
        
        dispose();
            
    }//GEN-LAST:event_btnHastaListesiniGörüntüleActionPerformed

    private void btnSadeceKaydetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSadeceKaydetActionPerformed
        // TODO add your handling code here:
        
        String hastaBilgileriData[] = {txtIsimSoyisim.getText(),txtTcNo.getText(),txtTelNo.getText(),txtAdres.getText()};
        
        if(txtIsimSoyisim.getText().equals("")|| txtTcNo.getText().equals("")|| txtDogumTarihi.getText().equals("")|| txtTelNo.getText().equals("")|| txtAdres.getText().equals("")){
        
            // if any field left blank than show message
            
            JOptionPane.showMessageDialog(this, "Lütfen boş alan bırakmayınız.");   
        }else{
            
            String tcc = txtTcNo.getText();
        
            try {
                if(TcKarsilastirma(tcc) == 1 ){
                    
                    JOptionPane.showMessageDialog(this, "Bu TC numarasi baska hastada kayitli gorunuyor.");   
                }else{
                       
                    if(txtTelNo.getText().matches("[0-9]+")){

                        if(txtDogumTarihi.getText().matches("\\d{2}-\\d{2}-\\d{4}")){

                            String xx = txtDogumTarihi.getText();
                            String DTgun = Character.toString(xx.charAt(0)) + Character.toString(xx.charAt(1));
                            String DTay = Character.toString(xx.charAt(3)) + Character.toString(xx.charAt(4));
                            String DTyil = Character.toString(xx.charAt(6)) + Character.toString(xx.charAt(7)) + Character.toString(xx.charAt(8)) + Character.toString(xx.charAt(9));
                            int currYear = Year.now().getValue();


                            if(Integer.parseInt(DTgun) > 31){
                                JOptionPane.showMessageDialog(this, "Dogum gunu 31'den buyuk olamaz.");   
                            }else{
                                if(Integer.parseInt(DTay) > 12){
                                    JOptionPane.showMessageDialog(this, "Dogum ayi 12'den buyuk olamaz.");    
                                }else{
                                    if(Integer.parseInt(DTyil) > currYear){
                                        JOptionPane.showMessageDialog(this, "Dogum yili gunumuzden buyuk olamaz.");    
                                    }else{

                                        try(FileWriter fw = new FileWriter("hastaBilgileri.txt", true);
                                        BufferedWriter bw = new BufferedWriter(fw);
                                        PrintWriter out = new PrintWriter(bw))
                                        {
                                            out.println();

                                            int len = hastaBilgileriData.length;
                                            for (int i=0;i<len-1;i++) {
                                                out.print(hastaBilgileriData[i]);
                                                out.print(" / ");
                                            }
                                            out.print(hastaBilgileriData[len-1]);

                                            //JOptionPane.showMessageDialog(this, "Başarıyla kaydedildi."); 

                                        } catch (IOException e) {
                                            //exception handling left as an exercise for the reader
                                        }


                                        // BU SEFER YAS BILGILERINI FARKLI BIR DOSYAYA KAYDETME //


                                        String HastaYasBilgisiData[] = {txtIsimSoyisim.getText(),txtTcNo.getText(),txtDogumTarihi.getText()};

                                        try(FileWriter fw3 = new FileWriter("hastaBilgileriDogumTarihiIle.txt", true);
                                            BufferedWriter bw3 = new BufferedWriter(fw3);
                                            PrintWriter out3 = new PrintWriter(bw3))
                                        {
                                            out3.println();

                                            int len = HastaYasBilgisiData.length;
                                            for (int i=0;i<len-1;i++) {
                                                out3.print(HastaYasBilgisiData[i]);
                                                out3.print(" / ");
                                            }
                                            out3.print(HastaYasBilgisiData[len-1]);

                                            //JOptionPane.showMessageDialog(this, "Başarıyla kaydedildi."); 


                                        } catch (IOException e) {
                                            //exception handling left as an exercise for the reader
                                        }

                                        // KAYDET VE YENI PENCEREYI AC //

                                        JTable JTableFrame = new JTable();
                                        JTableFrame.setVisible(true);

                                        //setDefaultCloseOperation(JYeniHasta.DISPOSE_ON_CLOSE);
                                        //JYeniHasta.dispatchEvent(new WindowEvent(frame, WindowEvent.WINDOW_CLOSING));
                                        setVisible(false); //you can't see me!
                                        dispose(); //Destroy the JFrame object

                                        //JTable.this.reset();

                                        JOptionPane.showMessageDialog(this, "Başarıyla kaydedildi ve liste güncellendi."); 

                                    }
                                }
                            }
                        }else{
                            JOptionPane.showMessageDialog(this, "Lütfen doğum tarihini verilen belirli formatta giriniz."); 
                            txtDogumTarihi.setText("gg-aa-yyyy");
                            txtDogumTarihi.setForeground(new java.awt.Color(102, 102, 102));
                        }
                    }else{
                            JOptionPane.showMessageDialog(this, "Lütfen telefon numarasina sadece sayilari bosluk birakmadan giriniz"); 
                    }
                } 
                
            } catch (IOException ex) {
                Logger.getLogger(JYeniHasta.class.getName()).log(Level.SEVERE, null, ex);
            }   
        }
    }//GEN-LAST:event_btnSadeceKaydetActionPerformed

    private void txtDogumTarihiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDogumTarihiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDogumTarihiActionPerformed

    private void txtDogumTarihiFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDogumTarihiFocusGained
        
        if(txtDogumTarihi.getText().equals("gg-aa-yyyy")){
            txtDogumTarihi.setText("");
        }else{
            txtDogumTarihi.setForeground(new java.awt.Color(0, 0, 0));
        }
    }//GEN-LAST:event_txtDogumTarihiFocusGained

    private void txtDogumTarihiFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDogumTarihiFocusLost
        //txtDogumTarihi.setText("gg-aa-yyyy");
        if(txtDogumTarihi.getText().equals("")){
            txtDogumTarihi.setText("gg-aa-yyyy");
            txtDogumTarihi.setForeground(new java.awt.Color(102, 102, 102));
        }
    }//GEN-LAST:event_txtDogumTarihiFocusLost

    private void txtDogumTarihiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDogumTarihiMouseClicked
        // TODO add your handling code here:
        if(txtDogumTarihi.getText().equals("gg-aa-yyyy")){
            txtDogumTarihi.setForeground(new java.awt.Color(102, 102, 102));
        }else{
            txtDogumTarihi.setForeground(new java.awt.Color(0, 0, 0));
        }
    }//GEN-LAST:event_txtDogumTarihiMouseClicked

    private void txtTelNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelNoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JYeniHasta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JYeniHasta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JYeniHasta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JYeniHasta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JYeniHasta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHastaListesiniGörüntüle;
    private javax.swing.JButton btnSadeceKaydet;
    private javax.swing.JButton btnYeniHastaKaydetveRndBilgEkle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField txtAdres;
    private javax.swing.JTextField txtDogumTarihi;
    private javax.swing.JTextField txtIsimSoyisim;
    private javax.swing.JTextField txtTcNo;
    private javax.swing.JTextField txtTelNo;
    // End of variables declaration//GEN-END:variables

}
